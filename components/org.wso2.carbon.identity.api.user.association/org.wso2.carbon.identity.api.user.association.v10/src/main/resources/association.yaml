swagger: '2.0'
######################################################
# Prolog
######################################################
info:
  version: "1.0.0"
  title: "WSO2 Identity Server Rest API - User Associations"
  description: |
    This document specifies a **RESTful API** for WSO2 **Identity Server** .
    It is written with [swagger 2](http://swagger.io/).
  contact:
    name: "WSO2"
    url: "http://wso2.com/products/identity-server/"
    email: "architecture@wso2.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

######################################################
# The fixed parts of the URLs of the API
######################################################

# The schemes supported by the API
schemes:
  - https

# The domain of the API.
# This is configured by the customer during deployment.
# The given host is just an example.
# host: apis.is.com

# The base path of the API.
# Will be prefixed to all paths.

# if the tenant domain is carbon.super basepath can be /api/identity/user/v1.0 like this too.
# basePath: /t/{tenant-domain}/api/identity/v1.0

# The following media types can be passed as input in message bodies of the API.
# The actual media type must be specified in the Content-Type header field of the request.
# The default is json, i.e. the Content-Type header is not needed to
# be set, but supporting it serves extensibility.
consumes:
  - application/json

# The following media types may be passed as output in message bodies of the API.
# The media type(s) consumable by the requestor is specified in the Accept header field
# of the corresponding request.
# The actual media type returned will be specfied in the Content-Type header field
# of the of the response.
# The default of the Accept header is json, i.e. there is not needed to
# set the value, but supporting it serves extensibility.
produces:
  - application/json
paths:
  # Endpoint uses to assiate two user accounts.
  /users/me/associations:
    post:
      description: |
         This API is used associate a user to the authenticated user.
      x-wso2-request: |
      x-wso2-curl: |
      x-wso2-response: |
        "HTTP/1.1 201 Created"
      summary: |
        Associate user to the authenticated user
      parameters:
        -
          name: association
          in: body
          description:  User will be associated to the authenticated user.
          required: true
          schema:
            $ref: '#/definitions/AssociationUserRequest'
      responses:
        201:
          description: Successfully created
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
        409:
          description: Conflict
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Associations
    get:
      x-wso2-request: |
      x-wso2-curl: |
      x-wso2-response: |
      tags:
      - Associations
      summary: Get authenticated user's associations
      description: This API is used to retrieve the associations of the authenticated user.
      responses:
        200:
          description: Successful operation
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/User'
        204:
          description: No content
        401:
          description: Unauthorized
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'

    delete:
      summary: Delete all my user associations
      description: This API is used to delete all associations of the auhtentiated user.
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
      - Associations
  /users/me/associations/{associate-user-id}:
    delete:
      parameters:
        -
          name : associate-user-id
          in : path
          required: true
          type: string
      summary: Delete a selected user association
      description: This API is used to delete the selected association of the auhtentiated user.
      responses:
        200:
          description: OK
        404:
          description: Not Found
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
      - Associations
  /users/me/associations/switch:
    put:
      parameters:
        -
          name : SwitchUserReqeust
          in : body
          required: true
          schema:
            $ref: '#/definitions/AssociationSwitchRequest'

      summary: Switch user account
      description: This API is used to switch the user account.
      responses:
        200:
          description: OK
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
      - Associations

  /users/{user-id}/associations:
    post:
      description: |
         This API is used associate two user accounts.
      x-wso2-request: |
      x-wso2-curl: |
      x-wso2-response: |
        "HTTP/1.1 201 Created"
      summary: |
        Associate users
      parameters:
        -
          name: association
          in: body
          description:  User Id of the associating user.
          required: true
          schema:
            $ref: '#/definitions/AssociationRequest'
        -
         name: user-id
         in: path
         required: true
         description: user id
         type: string

      responses:
        201:
          description: Successfully created
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
        409:
          description: Conflict
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Associations
    get:
      x-wso2-request: |
      x-wso2-curl: |
      x-wso2-response: |
      tags:
      - Associations
      summary: Get user's associations
      description: This API is used to retrieve the associations of the user.
      parameters:
       -
        name: user-id
        in: path
        required: true
        description: user id
        type: string
      responses:
        200:
          description: Successful operation
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/User'
        204:
          description: No content
        404:
          description: Not Found
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized request
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
    delete:
      parameters:
        -
          name : user-id
          in : path
          required: true
          type: string
      summary: Delete user's all user associations
      description: This API is used to delete all associations of the  user.
      responses:
        200:
          description: OK
        401:
          description: Unauthorized request
        404:
          description: Not Found
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
      - Associations

  /users/{user-id}/associations/{associate-user-id}}:
    delete:
      parameters:
        -
          name : user-id
          in : path
          required: true
          type: string
        -
          name : associate-user-id
          in : path
          required: true
          type: string
      summary: Delete user's selected user association
      description: This API is used to delete a selected association of the  user.
      responses:
        200:
          description: OK
        401:
          description: Unauthorized request
        404:
          description: Not Found
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
      - Associations

definitions:

#-----------------------------------------------------
# The Error Response  object
#-----------------------------------------------------
  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      description:
        type: string

#-----------------------------------------------------
# The User Response  object
#-----------------------------------------------------
  User:
    type: object
    properties:
      user-id:
        type: string
        example: '23e22434234234329jj9iin'
      username:
        type: string
        example: john
      user-store-domain:
        type: string
        example: PRIMARY
#-----------------------------------------------------
# The Property  object
#-----------------------------------------------------
  Property:
    type: object
    properties:
      key:
        type: string
      value:
        type: string

#-----------------------------------------------------
# The AssociationRequest Association Request
#-----------------------------------------------------
  AssociationRequest:
    type: object
    properties:
      associate-user-id:
        type: string
        example: johnb
      properties:
        type: array
        items:
          $ref: '#/definitions/Property'

#-----------------------------------------------------
# The AssociationSwitchRequest Association Request
#-----------------------------------------------------
  AssociationSwitchRequest:
    type: object
    properties:
      user-id:
        type: string
        example: john
      properties:
        type: array
        items:
          $ref: '#/definitions/Property'

#-----------------------------------------------------
# The AssociationUserRequest Association User Request
#-----------------------------------------------------
  AssociationUserRequest:
    type: object
    properties:
      user-id:
        type: string
        example: john
      password:
        type: string
        example: userpassword
      properties:
        type: array
        items:
          $ref: '#/definitions/Property'
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /consent/Associations/1.0.0